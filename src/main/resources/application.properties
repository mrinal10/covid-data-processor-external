# Logging (essential logging in production)
logging.level.root=INFO
logging.level.co.tide=INFO
# Context path
server.servlet.context-path=/rest/api
# Rollbar
rollbar.logger.level=OFF
rollbar.circuitBreakerWaitDurationInOpenStateInMilliSecs=36000000
tide.service.auth.allowedNoAuthControllerClassFqdns=springfox.documentation.swagger.web.ApiResourceController, springfox.documentation.swagger2.web.Swagger2ControllerWebMvc, org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController, springfox.documentation.swagger2.web.Swagger2ControllerWebMvc, springfox.documentation.oas.web.OpenApiControllerWebMvc
#=======================================================================================================================
# Spring Boot Actuator configs (health check and monitoring)
#=======================================================================================================================
# Run the management endpoints on a different port so they're not exposed externally
management.server.port=8081
# Run at the root, so we don't include /actuator in the path. Main health check is at /health
management.endpoints.web.base-path=/
# Expose all Actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# Disable DB check - if the DB is down, no point attempting to restart the service as it'll just be spinning
management.health.db.enabled=false
# Disk space checks aren't particularly relevant for us
management.health.diskspace.enabled=false
# Tomcat can give us some useful metrics (like how many threads are busy), which might be useful for monitoring and
# scaling. Spring Boot 2.2 disables those metrics by default, so lets bring them back (at the expense of ~2MB of heap).
# https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.2-Release-Notes#tomcats-mbean-registry
server.tomcat.mbeanregistry.enabled=true
#=======================================================================================================================
